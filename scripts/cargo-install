#!/usr/bin/env node

var packagejson = require(__dirname + '/../package.json');
var program = require('commander');
var colors = require('colors');
var cargo = require('..');
var https = require('https');
var http = require('http');
var async = require('async');
var unzip = require('unzip');
var _ = require('lodash');
var fs = require('fs');
var YAML = require('yamljs');
var exec = require('child_process').exec;

program
    .version(packagejson.version)
    .option('-d', '--dry-run', 'Perform a dry run install without changing any files.')
    .parse(process.argv);
//
// cargo.log('Performing install action');
// async.series(
//     {
//         'repos_fetch': function (cb) {
//             // Get the repositories in from the config file
//             cargo.log('Fetching repositories');
//             try {
//                 fs.mkdirSync(process.cwd() + '/repositories');
//             } catch (e) {
//                 if (e.code != 'EEXIST') cargo.throw(e);
//             }
//             try {
//                 fs.mkdirSync(process.cwd() + '/.cargo/repositories');
//             } catch (e) {
//                 if (e.code != 'EEXIST') cargo.throw(e);
//             }
//             async.each(
//                 cargo.config.get('repositories'),
//                 function (repo, cb) {
//                     cargo.log('Fetching', repo.name);
//
//                     var file = fs.createWriteStream(process.cwd() + '/.cargo/repositories/' + repo.name + '.' + repo.type);
//                     var request = https.get(repo.uri, function(response) {
//                         response.on('end', function() {
//                             cargo.log('Finished downloading:', repo.name);
//                             cb();
//                         });
//                         response.on('error', function(err) {
//                             cargo.log('Error downloading:', repo.name);
//                             cb(err);
//                         });
//                         response.pipe(file);
//                     });
//                 },
//                 function(err){
//                     if( err ) {
//                       cargo.throw('A repository failed to download', err);
//                     } else {
//                       cargo.log('All repositories have been downloaded successfully');
//                       cb();
//                     }
//                 }
//             );
//         },
//         'repo_extract': function (cb) {
//             // Extract any zip type files
//             cargo.log('Extracting archive based repositories')
//             async.each(
//                 cargo.config.repositories,
//                 function (repo, cb) {
//                     if (repo.type != 'zip') return false;
//                     cargo.log('Extracting', repo.name);
//                     var zip = fs.createReadStream(process.cwd() + '/.cargo/repositories/' + repo.name + '.' + repo.type);
//                     zip.on('end', function() {
//                         cargo.log('Finished extracting:', repo.name);
//                         try {
//                             fs.symlinkSync(
//                                 process.cwd() + '/.cargo/repositories/' + repo.name + '/' + repo.name,
//                                 process.cwd() + '/repositories/' + repo.name,
//                                 cb
//                             );
//                         } catch (e) {
//                             if (e.code != 'EEXIST') cargo.throw(e);
//                             cb();
//                         }
//                     });
//                     zip.on('error', function(err) {
//                         cargo.log('Error extracting:', repo.name);
//                         cb(err);
//                     });
//                     zip.pipe(unzip.Extract({ path: process.cwd() + '/.cargo/repositories/' + repo.name }));
//                 },
//                 function(err){
//                     if( err ) {
//                       cargo.throw('A repository failed to extract', err);
//                     } else {
//                       cargo.log('All repositories have been extracted successfully');
//                       cb();
//                     }
//                 }
//             );
//         },
//         'docker_setup': function (cb) {
//             cargo.log('Setting up docker-machine');
//         },
//         'docker_build': function (cb) {
//             cb();
//         },
//         'docker_': function (cb) {
//             cb();
//         }
//     },
//     function(err, results){
//         if (! err) cargo.log('All install actions completed, you may want to test your setup using cargo test');
//     }
// );
